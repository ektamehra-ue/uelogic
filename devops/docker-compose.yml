# docker-compose.yml
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
    - "5433:5432"   # host:container (use 5433 on host if 5432 is busy)
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      # pg_isready is enough to signal "accepting connections"
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ..             # repo root as build context
      dockerfile: devops/Dockerfile
    command: >
      bash -lc "until pg_isready -h db -p 5432 -U ${POSTGRES_USER}; do sleep 1; done
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    env_file: ../.env         # path is relative to this compose file
    working_dir: /app/backend
    volumes:
      - ../backend:/app/backend
      - ../data:/app/data          # mount data folder
    ports:
      - "8000:8000"
    depends_on:
      - db

volumes:
  db_data:
